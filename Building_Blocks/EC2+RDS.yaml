Parameters:

  pInstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.nano
    Description: Enter t2.micro, t2.small, or t2.nano. Default is t2.micro.

  pInstanceAz:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1a
    Description: Select an availability zone

  pDiskSize:
    Type: Number
    Default: 20
    Description: Insert the disk size

  pDBInstanceID:
    Default: mydbinstance
    Description: My database instance
    Type: String
    MinLength: '1'
    MaxLength: '63'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'

  pDBName:
    Default: mydb
    Description: My database
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'

  pDBInstanceClass:
    Default: db.t3.micro
    AllowedValues:
      - db.t3.micro
      - db.t3.small
      - db.t3.medium
    Description: DB instance class
    Type: String
  pDBStorage:
    Default: 50
    Description: The size of the database (GB)
    Type: Number
    MinValue: 20
    MaxValue: 200
  pDBUsername:
    Description: Username for database
    Type: String
    MinLength: 1
    MaxLength: 16
    Default: Admin
  pDBPassword:
    Description: Password for database access
    Type: String
    MinLength: '8'
    MaxLength: '41'
  pDBEngine:
    Description: Engine for database
    Type: String
    AllowedValues:
      - mysql
      - mariadb
      - postgres
    Default: mysql
  pSubnet1:
    Description: Subnet for RDS
    Type: AWS::EC2::Subnet::Id
  pSubnet2:
    Description: Subnet for RDS
    Type: AWS::EC2::Subnet::Id
  pPort:
    Description: Port for RDS
    Type: String
    Default: 3306

Resources:
  MyDB:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBInstanceIdentifier: !Ref pDBInstanceID
      DBName: !Ref pDBName
      DBInstanceClass: !Ref pDBInstanceClass
      AllocatedStorage: !Ref pDBStorage
      Engine: !Ref pDBEngine
      MasterUsername: !Ref pDBUsername
      MasterUserPassword: !Ref pDBPassword
      DBSubnetGroupName: !Ref SubnetGroup
      Port: !Ref pPort
      PubliclyAccessible: false
      VPCSecurityGroups: 
        - !GetAtt SecurityGroupRDS.GroupId

  SubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: Subnet group 
      DBSubnetGroupName: mySubnetGroup
      SubnetIds: 
        - !Ref pSubnet1
        - !Ref pSubnet2

  SecurityGroupRDS:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable port access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref pPort
          ToPort: !Ref pPort
          SourceSecurityGroupName: !Ref SecurityGroupEC2

  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Ref pInstanceAz
      ImageId: ami-0c02fb55956c7d316
      InstanceType: !Ref pInstanceType
      SecurityGroups: 
        - !Ref SecurityGroupEC2
      Volumes:
        - Device: "/dev/sdn"
          VolumeId: !Ref Disk1
        - Device: "/dev/sdm"
          VolumeId: !Ref Disk2
        - Device: "/dev/sdo"
          VolumeId: !Ref Disk3
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            yum update
            yum install mysql

  SecurityGroupEC2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SSH-SecurityGroup
      GroupDescription: Enable port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

# Disks can be attached and deattached on fly
  Disk1:
    Type: AWS::EC2::Volume
    Properties:
      Size: !Ref pDiskSize
      AvailabilityZone: !Ref pInstanceAz
    DeletionPolicy: Snapshot

  Disk2:
   Type: AWS::EC2::Volume
   Properties:
     Size: !Ref pDiskSize
     AvailabilityZone: !Ref pInstanceAz
   DeletionPolicy: Snapshot

  Disk3:
   Type: AWS::EC2::Volume
   Properties:
     Size: !Ref pDiskSize
     AvailabilityZone: !Ref pInstanceAz
   DeletionPolicy: Snapshot

Outputs:
  PublicIp:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt MyInstance.PublicIp

  InstanceId:
    Description: InstanceId of the EC2 instance
    Value: !Ref MyInstance